/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.SystemAdminWorkArea;

import Business.Customer.Customer;
import Business.EcoSystem;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Component;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author 张睿哲
 */
public class ViewCustomerScreen extends javax.swing.JPanel {

    JPanel userProcessContainer;
    EcoSystem ecosystem;
    String username;
    String olduserName;
    /**
     * Creates new form ViewCustomerScreen
     */
    public ViewCustomerScreen(JPanel rightPanel,EcoSystem system,String username) {
        initComponents();
        this.userProcessContainer=rightPanel;
        this.ecosystem=system;
        this.username=username;
        this.fill();
    }

    public void fill()
    {
        UserAccount ua=this.ecosystem.getUserAccountDirectory().searchUserAccount(username);
        this.txtUsername.setText(ua.getUsername());
        this.txtPassword.setText(ua.getPassword());
        this.olduserName=ua.getUsername();
        this.txtUsername.setEnabled(false);
        this.txtPassword.setEnabled(false);
        this.btnConfirm.setVisible(false);
       /* Customer cust=agency.getCustomerDir().getCustomers().get(index);
        Date birthDate=cust.getDateOfBirth();
        Date expDate=cust.getPassportExpirationDate();
        SimpleDateFormat formatter = new SimpleDateFormat("MM/dd/yy");
        String birth=formatter.format(birthDate);
        String exp=formatter.format(expDate);
        this.txtDateOfBirth.setText(birth);
        this.txtPassportExp.setText(exp);
        this.txtFirstName.setText(cust.getFirstName());
        this.txtLastName.setText(cust.getLastName());
        this.txtNationality.setText(cust.getNationality());
        this.txtPassportNum.setText(cust.getPassportNum());
        this.txtDateOfBirth.setEnabled(false);
        this.txtFirstName.setEnabled(false);
        this.txtLastName.setEnabled(false);
        this.txtNationality.setEnabled(false);
        this.txtPassportExp.setEnabled(false);
        this.txtPassportNum.setEnabled(false);
        this.btnConfirm.setVisible(false);*/
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnUpdate = new javax.swing.JButton();
        btnConfirm = new javax.swing.JButton();
        txtUsername = new javax.swing.JTextField();
        txtPassword = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnConfirm.setText("Confirm");
        btnConfirm.setActionCommand("Update");
        btnConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmActionPerformed(evt);
            }
        });

        jLabel1.setText("Username");

        jLabel2.setText("Password");

        btnBack.setText("<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel7.setText("View Customer Detail");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnBack)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addGap(38, 38, 38)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(btnUpdate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnConfirm, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(txtPassword, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addContainerGap(370, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(btnBack)
                .addGap(30, 30, 30)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnUpdate)
                .addGap(18, 18, 18)
                .addComponent(btnConfirm)
                .addGap(149, 149, 149))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:

        this.txtUsername.setEnabled(true);
        this.txtPassword.setEnabled(true);
        this.btnConfirm.setVisible(true);
        this.btnUpdate.setVisible(false);
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        String username=this.txtUsername.getText();
        String password=this.txtPassword.getText();
        
        if(ecosystem.checkIfUserIsUnique(username))
        {
            JOptionPane.showMessageDialog(null, "Customer already exist!");
        
        }
        else
        {
            ecosystem.getUserAccountDirectory().searchUserAccount(this.olduserName).setUsername(username);
            ecosystem.getUserAccountDirectory().searchUserAccount(this.username).setPassword(password);
            JOptionPane.showMessageDialog(null, "Customer updated successfully!");
            this.txtUsername.setEnabled(false);
            this.txtPassword.setEnabled(false);
            this.btnUpdate.setVisible(true);
            this.btnConfirm.setVisible(false);
        }
        

 /*       try
        {//检查出生日期和护照过期日期格式是否正确
            SimpleDateFormat formatter = new SimpleDateFormat("MM/dd/yy");
            dateOfBirth = formatter.parse(birthDate);
            passportExpDate = formatter.parse(expDate);
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, "Invalid date format!");
            return;
        }
        */
 
 
       /* Customer cust=this.agency.getCustomerDir().getCustomers().get(index);
        cust.setDateOfBirth(dateOfBirth);
        cust.setFirstName(firstName);
        cust.setLastName(lastName);
        cust.setNationality(nationality);
        cust.setPassportExpirationDate(passportExpDate);
        cust.setPassportNum(passportNum);
        this.agency.getCustomerDir().getCustomers().remove(index);
        if(!this.agency.getCustomerDir().addCustomer(cust))
        JOptionPane.showMessageDialog(null, "Customer already exist!");
        else
        {
            JOptionPane.showMessageDialog(null, "Customer updated successfully!");
            this.txtDateOfBirth.setEnabled(false);
            this.txtFirstName.setEnabled(false);
            this.txtLastName.setEnabled(false);
            this.txtNationality.setEnabled(false);
            this.txtPassportExp.setEnabled(false);
            this.txtPassportNum.setEnabled(false);
            this.btnConfirm.setVisible(false);

            this.btnUpdate.setVisible(true);
        }*/
    }//GEN-LAST:event_btnConfirmActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        CardLayout layout=(CardLayout)this.userProcessContainer.getLayout();
        this.userProcessContainer.remove(this);
        layout.show(userProcessContainer, "ManageCustomer");
        Component[] comps=this.userProcessContainer.getComponents();
        for(Component comp:comps)
        {
            if(comp instanceof ManageCustomer)
            {
                ManageCustomer manage=(ManageCustomer)comp;
                manage.populate();
            }
        }
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnConfirm;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
